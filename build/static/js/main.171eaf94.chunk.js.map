{"version":3,"sources":["components/firebase/context.js","components/firebase/config.js","components/firebase/index.js","components/firebase/firebase.js","components/SignUp.jsx","components/LogIn.jsx","components/BlockCategories.jsx","components/ForgotPassword.jsx","components/Welcome.jsx","components/Friends.jsx","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","Object","classCallCheck","onAuthUserListener","next","fallback","auth","onAuthStateChanged","authUser","user","uid","get","then","snapshot","dbUser","data","roles","objectSpread","email","doCreateUserWithEmailAndPassword","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","db","doc","concat","users","collection","app","initializeApp","fieldValue","firestore","FieldValue","GoogleAuthProvider","INITIAL_STATE","username","retypePassword","error","SignUp","state","handleOnChange","event","setState","defineProperty","target","name","value","onSubmit","firebase","console","log","_this$state","set","merge","props","changePage","catch","preventDefault","_this2","_this$state2","isInvalid","react_default","a","createElement","context","Consumer","className","Input","placeholder","onChange","type","Button","disabled","color","onClick","message","Component","LogIn","changeAuth","BlockCategories","selectAllChecked","blockedCategories","handleSavePreferences","elements","document","getElementsByClassName","checkedItems","catArray","i","length","checked","push","chrome","tabs","query","active","currentWindow","sendMessage","id","todo","categories","localStorage","setItem","JSON","stringify","handleSelectAll","onSnapshot","undefined","getCategories","_this3","class","ForgotPassword","resetEmailSent","Welcome","handleSignOut","signout","Friends","friendsList","friendEmail","isLoading","friendId","friendPendingRequests","requestsSent","requestsReceived","cancelSentRequest","request","filter","friend","requests_sent","querySnapshot","fetchRequestsreceivedData","requests_received","handleRemoveFriend","foe","friends","foeFriendsList","renderFriendsList","Spinner_default","animation","role","map","renderRequestsSent","acceptReceivedRequest","toConsumableArray","fetchRequestsSentData","rejectReceivedRequest","renderRequestsReceived","handleFriendEmail","e","handleAddFriend","where","docs","forEach","friendsPendingRequests","handleUpdateFriendsPreferences","Form","FormGroup","App","page","getItem","parse","handlePages","pageTitle","handleAuthUser","handleBack","renderBack","index_es","icon","size","renderComponent","components_LogIn","components_SignUp","components_ForgotPassword","components_Welcome","components_BlockCategories","components_Friends","Boolean","window","location","hostname","match","library","add","faArrowLeft","ReactDOM","render","Provider","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6RAIeA,EAFSC,IAAMC,cAAc,uBCQ7BC,qBAVA,CACbC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,wCCJMC,ECKb,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAQdG,mBAAqB,SAACC,EAAMC,GAAP,OACnBN,EAAKO,KAAKC,mBAAmB,SAAAC,GACvBA,EACFT,EAAKU,KAAKD,EAASE,KAChBC,MACAC,KAAK,SAAAC,GACJ,IAAMC,EAASD,EAASE,OAGnBD,EAAOE,QACVF,EAAOE,MAAQ,IAIjBR,EAAQP,OAAAgB,EAAA,EAAAhB,CAAA,CACNS,IAAKF,EAASE,IACdQ,MAAOV,EAASU,OACbJ,GAGLV,EAAKI,KAGTH,OA/BQL,KAoCdmB,iCAAmC,SAACD,EAAOE,GAAR,OACjCrB,EAAKO,KAAKe,+BAA+BH,EAAOE,IArCpCpB,KAuCdsB,6BAA+B,SAACJ,EAAOE,GAAR,OAC7BrB,EAAKO,KAAKiB,2BAA2BL,EAAOE,IAxChCpB,KA0CdwB,mBAAqB,kBAAMzB,EAAKO,KAAKmB,gBAAgB1B,EAAK2B,iBA1C5C1B,KA4Cd2B,UAAY,kBAAM5B,EAAKO,KAAKsB,WA5Cd5B,KA8Cd6B,gBAAkB,SAAAX,GAAK,OAAInB,EAAKO,KAAKwB,uBAAuBZ,IA9C9ClB,KAgDd+B,iBAAmB,SAAAX,GAAQ,OAAIrB,EAAKO,KAAK0B,YAAYC,eAAeb,IAhDtDpB,KAkDdS,KAAO,SAAAC,GAAG,OAAIX,EAAKmC,GAAGC,IAAR,SAAAC,OAAqB1B,KAlDrBV,KAoDdqC,MAAQ,kBAAMtC,EAAKmC,GAAGI,WAAW,UAnD/BC,IAAIC,cAAclD,GAClBU,KAAKyC,WAAaF,IAAIG,UAAUC,WAChC3C,KAAKM,KAAOiC,IAAIjC,OAChBN,KAAKkC,GAAKK,IAAIG,YACd1C,KAAK0B,eAAiB,IAAIa,IAAIjC,KAAKsC,oBCTjCC,EAAgB,CACpBC,SAAU,GACV5B,MAAO,GACPE,SAAU,GACV2B,eAAgB,GAChBC,MAAO,MAwGMC,6MApGbC,qBACKL,KAGLM,eAAiB,SAAAC,GACfrD,EAAKsD,SACHtD,EAAKsD,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GACGmD,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,YAKxCC,SAAW,SAACC,EAAUP,GACpBQ,QAAQC,IAAIF,GADkB,IAAAG,EAEQ/D,EAAKmD,MAAnChC,EAFsB4C,EAEtB5C,MAAOE,EAFe0C,EAEf1C,SAAU0B,EAFKgB,EAELhB,SAEzBa,EAASA,SACNxC,iCAAiCD,EAAOE,GACxCR,KAAK,SAAAJ,GACJ,OAAOmD,EAASA,SAASlD,KAAKD,EAASC,KAAKC,KAAKqD,IAC/C,CACEjB,WACA5B,SAEF,CAAE8C,OAAO,MAGZpD,KAAK,SAAAJ,GACJT,EAAKsD,SAALpD,OAAAgB,EAAA,EAAAhB,CAAA,GAAmB4C,IACnB9C,EAAKkE,MAAMC,WAAW,WAEvBC,MAAM,SAAAnB,GACLjD,EAAKsD,SAAS,CAAEL,YAGpBI,EAAMgB,0FAGC,IAAAC,EAAArE,KAAAsE,EACsDtE,KAAKkD,MAA1DJ,EADDwB,EACCxB,SAAU5B,EADXoD,EACWpD,MAAOE,EADlBkD,EACkBlD,SAAU2B,EAD5BuB,EAC4BvB,eAAgBC,EAD5CsB,EAC4CtB,MAC7CuB,EACS,KAAbnD,GAAmBA,IAAa2B,GAA+B,KAAbD,EAEpD,OACE0B,EAAAC,EAAAC,cAACC,EAAgBC,SAAjB,KACG,SAAAjB,GAAQ,OACPa,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WAAd,WACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,YAAY,WACZvB,KAAK,WACLwB,SAAUX,EAAKlB,eACfM,MAAOX,IAET0B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,YAAY,QACZvB,KAAK,QACLwB,SAAUX,EAAKlB,eACfM,MAAOvC,IAETsD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,YAAY,WACZvB,KAAK,WACLyB,KAAK,WACLD,SAAUX,EAAKlB,eACfM,MAAOrC,IAEToD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,YAAY,kBACZvB,KAAK,iBACLyB,KAAK,WACLD,SAAUX,EAAKlB,eACfM,MAAOV,IAETyB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEL,UAAU,SACVM,SAAUZ,EACVa,MAAM,UACNH,KAAK,SACLI,QAAS,SAAAjC,GAAK,OAAIiB,EAAKX,SAAS,CAAEC,YAAYP,KALhD,WAQU,IACVoB,EAAAC,EAAAC,cAAA,WACC1B,GAASwB,EAAAC,EAAAC,cAAA,SAAI1B,EAAMsC,SAtCtB,2BAuC2B,IACzBd,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QACEG,UAAU,UACVQ,QAAS,kBAAMhB,EAAKJ,MAAMC,WAAW,WAFvC,qBAxFSqB,aCPf1C,EAAgB,CACpB3B,MAAO,GACPE,SAAU,GACV4B,MAAO,MAwGMwC,6MApGbtC,qBACKL,KAGLM,eAAiB,SAAAC,GACfrD,EAAKsD,SACHtD,EAAKsD,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GACGmD,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,YAKxCC,SAAW,SAACC,EAAUP,GACpBQ,QAAQC,IAAIF,GADkB,IAAAG,EAEF/D,EAAKmD,MAAzBhC,EAFsB4C,EAEtB5C,MAAOE,EAFe0C,EAEf1C,SACfuC,EAASA,SACNrC,6BAA6BJ,EAAOE,GACpCR,KAAK,SAAAJ,GACJoD,QAAQC,IAAI,aACZ9D,EAAKsD,SAALpD,OAAAgB,EAAA,EAAAhB,CAAA,GAAmB4C,IAEnBc,EAASA,SAASrD,KACfC,mBAAmB,SAAAC,GAClBoD,QAAQC,IAAI,oBACZ9D,EAAKkE,MAAMwB,WAAWjF,GACtBT,EAAKkE,MAAMC,WAAW,aAEvBC,MAAM,SAAAnB,GACLY,QAAQC,IAAI,iBAAkBb,OAGnCmB,MAAM,SAAAnB,GACLjD,EAAKsD,SAAS,CAAEL,UAChBY,QAAQC,IAAI,WAAY9D,EAAKmD,MAAMF,SAGvCI,EAAMgB,0FAGC,IAAAC,EAAArE,KAAAsE,EAC4BtE,KAAKkD,MAAhChC,EADDoD,EACCpD,MAAOE,EADRkD,EACQlD,SAAU4B,EADlBsB,EACkBtB,MACnBuB,EAAyB,KAAbnD,GAA6B,KAAVF,EAErC,OACEsD,EAAAC,EAAAC,cAACC,EAAgBC,SAAjB,KACG,SAAAjB,GAAQ,OACPa,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WAAd,WACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACED,UAAU,eACVE,YAAY,QACZvB,KAAK,QACLwB,SAAUX,EAAKlB,eACfM,MAAOvC,IAETsD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACED,UAAU,eACVE,YAAY,WACZvB,KAAK,WACLyB,KAAK,WACLD,SAAUX,EAAKlB,eACfM,MAAOrC,IAEToD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEL,UAAU,SACVM,SAAUZ,EACVa,MAAM,UACNH,KAAK,SACLI,QAAS,SAAAjC,GAAK,OAAIiB,EAAKX,SAAS,CAAEC,YAAYP,KALhD,WASCJ,GAASwB,EAAAC,EAAAC,cAAA,SAAI1B,EAAMsC,SAGpBd,EAAAC,EAAAC,cAAA,QACEG,UAAU,UACVQ,QAAS,kBAAMhB,EAAKJ,MAAMC,WAAW,oBAFvC,oBAMAM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WApCF,yBAqCyB,IACvBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QACEG,UAAU,UACVQ,QAAS,kBAAMhB,EAAKJ,MAAMC,WAAW,YAFvC,WAMAM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qBA7FQa,sCCyRLG,6MAhSbxC,MAAQ,CACNyC,kBAAkB,EAClBC,kBAAmB,QA6BrBC,sBAAwB,SAAAlC,GAItB,IAHA,IAAMmC,EAAWC,SAASC,uBAAuB,aAC7CC,EAAe,GACbC,EAAW,GACRC,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IAC/BL,EAASK,GAAGE,UACdJ,EAAaK,KAAKR,EAASK,GAAG1C,OAC9ByC,EAASI,KAAKR,EAASK,GAAG3C,OAI9B+C,OAAOC,KAAKC,MACV,CACEC,QAAQ,EACRC,eAAe,GAEjB,SAASH,GACPD,OAAOC,KAAKI,YAAYJ,EAAK,GAAGK,GAAI,CAClCC,KAAM,oBACNC,WAAYb,IAEdtC,QAAQC,IAAI,gCAIhBmD,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUlB,IACzDtC,EAASlD,KAAKV,EAAKkE,MAAMzD,SAASE,KAAKqD,IACrC,CACE6B,kBAAmBK,GAErB,CAAEjC,OAAO,IAEXJ,QAAQC,IAAIoC,MAGdmB,gBAAkB,WAKhB,GAJArH,EAAKsD,SAAS,CACZsC,kBAAmB5F,EAAKmD,MAAMyC,mBAG5B5F,EAAKmD,MAAMyC,iBAEb,IADA,IAAMG,EAAWC,SAASC,uBAAuB,aACxCG,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IACnCL,EAASK,GAAGE,SAAU,OAIxB,IADA,IAAMP,EAAWC,SAASC,uBAAuB,aACxCG,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IACnCL,EAASK,GAAGE,SAAU,yNAzEMrG,KAAKiE,MAAMN,SACxClD,KAAKT,KAAKiE,MAAMzD,SAASE,KACzB2G,WAAW,SAAAxG,GACVwD,EAAKhB,SAAS,CAAEuC,kBAAmB/E,EAASE,QAAU,WAAM,IAClD6E,EAAsBvB,EAAKnB,MAA3B0C,kBAER,GAAI,OAASA,QAAqB0B,IAAc1B,QAC1C0B,IAAc1B,EAAkBA,kBAAmB,CACrD,IAAME,EAAWC,SAASC,uBAAuB,aAC3CuB,EAAgB3B,EAAkBA,kBACxChC,QAAQC,IACN,iBACA+B,EAAkBA,mBAGpB,IAAK,IAAIO,EAAI,EAAGA,EAAIoB,EAAcnB,OAAQD,IACxCvC,QAAQC,IAAI,WAAY0D,EAAcpB,IACtCL,EAASyB,EAAcpB,IAAIE,SAAU,wJA6D1C,IAAAmB,EAAAxH,KACP,OAKEwE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WAAd,uBACAL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,qBACZL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,KACNoD,GAAG,YACHxB,QAASrF,KAAKoH,kBALlB,cASA5C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,IACND,KAAK,kBACLiE,MAAM,cALV,mBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,IACND,KAAK,mBACLiE,MAAM,cALV,oBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,IACND,KAAK,SACLiE,MAAM,cALV,UASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,IACND,KAAK,YACLiE,MAAM,cALV,aASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,IACND,KAAK,gBACLiE,MAAM,cALV,iBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,IACND,KAAK,uBACLiE,MAAM,cALV,wBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,IACND,KAAK,mBACLiE,MAAM,cALV,oBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,IACND,KAAK,OACLiE,MAAM,cALV,QASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,IACND,KAAK,SACLiE,MAAM,cALV,UASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,IACND,KAAK,gBACLiE,MAAM,cALV,iBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,KACND,KAAK,QACLiE,MAAM,cALV,SASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,KACND,KAAK,kBACLiE,MAAM,cALV,mBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,KACND,KAAK,wBACLiE,MAAM,cALV,yBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,KACND,KAAK,iBACLiE,MAAM,cALV,kBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,KACND,KAAK,iBACLiE,MAAM,cALV,kBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,KACND,KAAK,uBACLiE,MAAM,cALV,wBASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,KACND,KAAK,SACLiE,MAAM,cALV,UASAjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLxB,MAAM,KACND,KAAK,kBACLiE,MAAM,cALV,oBAUFjD,EAAAC,EAAAC,cAAA,OAAK+C,MAAM,iBACTjD,EAAAC,EAAAC,cAAA,UACEmC,GAAG,kBACHY,MAAM,kBACNpC,QAAS,kBAAMmC,EAAK3B,sBAAsB2B,EAAKvD,MAAMN,YAHvD,2BA/QgB4B,aCCxB1C,EAAgB,CACpB3B,MAAO,GACP8B,MAAO,MA0EM0E,6MAtEbxE,qBACKL,GACH8E,gBAAgB,MAGlBxE,eAAiB,SAAAC,GACfrD,EAAKsD,SACHtD,EAAKsD,SAALpD,OAAAqD,EAAA,EAAArD,CAAA,GACGmD,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,YAKxCC,SAAW,SAACC,EAAUP,GACpBQ,QAAQC,IAAIF,GADkB,IAEtBzC,EAAUnB,EAAKmD,MAAfhC,MACRyC,EAASA,SACN9B,gBAAgBX,GAChBN,KAAK,SAAAJ,GACJoD,QAAQC,IAAI,oBACZ9D,EAAKsD,SAALpD,OAAAgB,EAAA,EAAAhB,CAAA,GAAmB4C,EAAnB,CAAkC8E,gBAAgB,OAEnDxD,MAAM,SAAAnB,GACLjD,EAAKsD,SAAS,CAAEL,YAGpBI,EAAMgB,0FAGC,IAAAC,EAAArE,KAAA8D,EACkC9D,KAAKkD,MAAtChC,EADD4C,EACC5C,MAAOyG,EADR7D,EACQ6D,eAAgB3E,EADxBc,EACwBd,MACzBuB,EAEM,KAAVrD,EAEF,OACEsD,EAAAC,EAAAC,cAACC,EAAgBC,SAAjB,KACG,SAAAjB,GAAQ,OACPa,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WAAd,kBAEAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,YAAY,QACZvB,KAAK,QACLwB,SAAUX,EAAKlB,eACfM,MAAOvC,IAGTsD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEL,UAAU,YACVM,SAAUZ,EACVa,MAAM,UACNH,KAAK,SACLI,QAAS,SAAAjC,GAAK,OAAIiB,EAAKX,SAAS,CAAEC,YAAYP,KALhD,uBASCJ,GAASwB,EAAAC,EAAAC,cAAA,SAAI1B,EAAMsC,SACnBqC,GACCnD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAI,4DA7DSa,aCgDdqC,6MApDb1E,MAAQ,KAER2E,cAAgB,SAAAlE,GACdA,EAAShC,YAAYf,KAAK,SAAAkH,GACxBlE,QAAQC,IAAI,WACZF,EAASrD,KAAKC,mBAAmB,SAAAC,GAC/BT,EAAKkE,MAAMwB,WAAW,QACtB1F,EAAKkE,MAAMC,WAAW,sFAKnB,IAAAG,EAAArE,KAEP,OADA4D,QAAQC,IAAI,kBAAmB7D,KAAKiE,MAAMzD,UAExCgE,EAAAC,EAAAC,cAACC,EAAgBC,SAAjB,KACG,SAAAjB,GAAQ,OACPa,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,WAAb,mEAGAL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEL,UAAU,QACVO,MAAM,UACNC,QAAS,kBAAMhB,EAAKJ,MAAMC,WAAW,uBAHvC,oBAQAM,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEL,UAAU,UACVO,MAAM,UACNC,QAAS,kBAAMhB,EAAKJ,MAAMC,WAAW,aAHvC,WAQAM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEL,UAAU,UACVQ,QAAS,kBAAMhB,EAAKwD,cAAclE,KAFpC,sBAxCU4B,8DCsaPwC,6MArab7E,MAAQ,CACNJ,SAAU,GACVkF,YAAa,GACbC,YAAa,GACb3C,QAAS,GACT4C,WAAW,EACXC,SAAU,GACVC,sBAAuB,GACvBC,aAAc,GACdC,iBAAkB,MA6BpBC,kBAAoB,SAACC,EAAS7E,GAC5B5D,EAAKsD,SACH,CACEgF,aAActI,EAAKmD,MAAMmF,aAAaI,OACpC,SAAAC,GAAM,OAAIA,EAAO7B,KAAO2B,EAAQ3B,MAGpC,WACElD,EAASlD,KAAKV,EAAKkE,MAAMzD,SAASE,KAAKqD,IACrC,CACE4E,cAAe5I,EAAKmD,MAAMmF,cAE5B,CACErE,OAAO,MAOfL,EACGlD,KAAK+H,EAAQ3B,IACblG,MACAC,KAAK,SAAAgI,GACJ,IAAIC,EAA4BD,EAAc7H,OAAO+H,uBAEnBxB,IAA9BuB,GACFlF,EAASlD,KAAK+H,EAAQ3B,IAAI9C,IACxB,CACE+E,kBAAmBD,EAA0BJ,OAC3C,SAAAC,GAAM,OAAIA,EAAO7B,KAAO9G,EAAKkE,MAAMzD,SAASE,OAGhD,CAAEsD,OAAO,SAMnB+E,mBAAqB,SAACC,EAAKrF,GACzB5D,EAAKsD,SACH,CACE2E,YAAajI,EAAKmD,MAAM8E,YAAYS,OAClC,SAAAC,GAAM,OAAIA,EAAO7B,KAAOmC,EAAInC,MAGhC,WACElD,EAASlD,KAAKV,EAAKkE,MAAMzD,SAASE,KAAKqD,IACrC,CACEkF,QAASlJ,EAAKmD,MAAM8E,aAEtB,CACEhE,OAAO,MAMfL,EACGlD,KAAKuI,EAAInC,IACTlG,MACAC,KAAK,SAAAgI,GACJ,IAAIM,EAAiBN,EAAc7H,OAAOkI,aAEnB3B,IAAnB4B,GACFvF,EAASlD,KAAKuI,EAAInC,IAAI9C,IACpB,CACEkF,QAASC,EAAeT,OACtB,SAAAC,GAAM,OAAIA,EAAO7B,KAAO9G,EAAKkE,MAAMzD,SAASE,OAGhD,CACEsD,OAAO,SAOnBmF,kBAAoB,SAAAxF,GAClB,OAAO5D,EAAKmD,MAAMgF,UAChB1D,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAS4E,UAAU,SAASC,KAAK,gBACJhC,IAA3BvH,EAAKmD,MAAM8E,YACbjI,EAAKmD,MAAM8E,YAAYuB,IAAI,SAAAb,GAAM,OAC/BlE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKgE,EAAO5F,UACZ0B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQE,MAAM,WAAd,mBACAZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEE,MAAM,SACNC,QAAS,kBAAMtF,EAAKgJ,mBAAmBL,EAAQ/E,KAFjD,oBASJa,EAAAC,EAAAC,cAAA,eAIJ8E,mBAAqB,SAAA7F,GACnB,OAAO5D,EAAKmD,MAAMmF,aAAakB,IAAI,SAAAb,GAAM,OACvClE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKgE,EAAO5F,UACZ0B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEE,MAAM,SACNC,QAAS,kBAAMtF,EAAKwI,kBAAkBG,EAAQ/E,KAFhD,wBAUN8F,sBAAwB,SAACf,EAAQ/E,GAE/B5D,EAAKsD,SACH,CACE2E,YAAW,GAAA5F,OAAAnC,OAAAyJ,EAAA,EAAAzJ,CAAMF,EAAKmD,MAAM8E,aAAjB,CAA8BU,KAE3C,WACE9E,QAAQC,IAAI,iBAAkB9D,EAAKmD,MAAM8E,aACzCrE,EAASlD,KAAKV,EAAKkE,MAAMzD,SAASE,KAAKqD,IACrC,CACEkF,QAASlJ,EAAKmD,MAAM8E,aAEtB,CACEhE,OAAO,IAKXjE,EAAKsD,SACH,CACEiF,iBAAkBvI,EAAKmD,MAAMoF,iBAAiBG,OAC5C,SAAAD,GAAO,OAAIA,EAAQ3B,KAAO6B,EAAO7B,MAGrC,WACElD,EAASlD,KAAKV,EAAKkE,MAAMzD,SAASE,KAAKqD,IACrC,CACE+E,kBAAmB/I,EAAKmD,MAAMoF,kBAEhC,CACEtE,OAAO,IAKXL,EACGlD,KAAKiI,EAAO7B,IACZlG,MACAC,KAAK,SAAAgI,GACJ,IAAIe,EAAwBf,EAAc7H,OAAO4H,cACjD/E,QAAQC,IAAI,YAAaF,EAASlD,KAAKiI,EAAO7B,UAEhBS,IAA1BqC,GACFhG,EAASlD,KAAKiI,EAAO7B,IAAI9C,IACvB,CACE4E,cAAegB,EAAsBlB,OACnC,SAAAD,GAAO,OAAIA,EAAQ3B,KAAO9G,EAAKkE,MAAMzD,SAASE,MAEhDuI,QAAS,MAC0B3B,IAAjCsB,EAAc7H,OAAOkI,QAArBhJ,OAAAgB,EAAA,EAAAhB,CAAA,GACS2I,EAAc7H,OAAOkI,SAD9BhJ,OAAAgB,EAAA,EAAAhB,CAAA,GAES,IAET,CACEiB,MAAOnB,EAAKkE,MAAMzD,SAASU,MAC3B4B,SAAU/C,EAAKmD,MAAMJ,SACrB+D,GAAI9G,EAAKkE,MAAMzD,SAASE,OAI9B,CAAEsD,OAAO,aAU3B4F,sBAAwB,SAACpB,EAAS7E,GAEhC5D,EAAKsD,SACH,CACEiF,iBAAkBvI,EAAKmD,MAAMoF,iBAAiBG,OAC5C,SAAAC,GAAM,OAAIA,EAAO7B,KAAO2B,EAAQ3B,MAGpC,WACElD,EAASlD,KAAKV,EAAKkE,MAAMzD,SAASE,KAAKqD,IACrC,CACE+E,kBAAmB/I,EAAKmD,MAAMoF,kBAEhC,CACEtE,OAAO,MAOfL,EACGlD,KAAK+H,EAAQ3B,IACblG,MACAC,KAAK,SAAAgI,GACJ,IAAIe,EAAwBf,EAAc7H,OAAO4H,mBAEnBrB,IAA1BqC,GACFhG,EAASlD,KAAK+H,EAAQ3B,IAAI9C,IACxB,CACE4E,cAAegB,EAAsBlB,OACnC,SAAAC,GAAM,OAAIA,EAAO7B,KAAO9G,EAAKkE,MAAMzD,SAASE,OAGhD,CAAEsD,OAAO,SAMnB6F,uBAAyB,SAAAlG,GACvB,OAAO5D,EAAKmD,MAAMoF,iBAAiBiB,IAAI,SAAAb,GAAM,OAC3ClE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKgE,EAAO5F,UACZ0B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEE,MAAM,UACNC,QAAS,kBAAMtF,EAAK0J,sBAAsBf,EAAQ/E,KAFpD,UAMAa,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEE,MAAM,SACNC,QAAS,kBAAMtF,EAAK6J,sBAAsBlB,EAAQ/E,KAFpD,gBAUNmG,kBAAoB,SAAAC,GAClBhK,EAAKsD,SAAS,CACZ4E,YAAa8B,EAAExG,OAAOE,WAI1BuG,gBAAkB,SAAArG,GAChBA,EAASzB,GACNI,WAAW,SACX2H,MAAM,QAAS,KAAMlK,EAAKmD,MAAM+E,aAChCtH,MACAC,KAAK,SAAAgI,GACAA,EAAcsB,KAAK9D,OAAS,EAC9BrG,EAAKsD,SAAS,CACZiC,QACE,8EAGJsD,EAAcuB,QAAQ,SAAAhI,GAGJ,IADdpC,EAAKmD,MAAMmF,aAAaI,OAAO,SAAAC,GAAM,OAAIA,EAAOhI,MAAQyB,EAAI0E,KACzDT,OAEHrG,EAAKsD,SACH,CACEgF,aAAY,GAAAjG,OAAAnC,OAAAyJ,EAAA,EAAAzJ,CACPF,EAAKmD,MAAMmF,cADJ,CAEV,CACEnH,MAAOnB,EAAKmD,MAAM+E,YAClBnF,SAAUX,EAAIpB,OAAO+B,SACrB+D,GAAI1E,EAAI0E,MAGZsB,SAAUhG,EAAI0E,IAEhB,WACEjD,QAAQC,IAAI,cAAe9D,EAAKmD,MAAMiF,UACtCxE,EAASlD,KAAKV,EAAKkE,MAAMzD,SAASE,KAAKqD,IACrC,CACE4E,cAAe5I,EAAKmD,MAAMmF,cAE5B,CAAErE,OAAO,IAGXjE,EAAKsD,SACH,CACEiC,QAAS,gBAEX,WACE3B,EACGlD,KAAKV,EAAKmD,MAAMiF,UAChBxH,MACAC,KAAK,SAAAgI,GACJ7I,EAAKsD,SACH,CACE+G,4BAEE9C,IADAsB,EAAc7H,OAAO+H,kBAEjB,GACAF,EAAc7H,OAAO+H,mBAE7B,WACEnF,EAASlD,KAAKV,EAAKmD,MAAMiF,UAAUpE,IACjC,CACE+E,kBAAiB,GAAA1G,OAAAnC,OAAAyJ,EAAA,EAAAzJ,CACZF,EAAKmD,MAAMkF,uBADC,CAEf,CACEvB,GAAI9G,EAAKkE,MAAMzD,SAASE,IACxBQ,MAAOnB,EAAKkE,MAAMzD,SAASU,MAC3B4B,SAAU/C,EAAKmD,MAAMJ,aAI3B,CAAEkB,OAAO,YAU3BjE,EAAKsD,SAAS,CACZiC,QAAS,+DAQvB+E,+BAAiC,SAAA1G,wFA1Wb,IAAAU,EAAArE,KAClB4D,QAAQC,IAAI7D,KAAKiE,MAAMzD,UACvBR,KAAKiE,MAAMC,WAAW,WACtBlE,KAAKiE,MAAMN,SAASlD,KAAKT,KAAKiE,MAAMzD,SAASE,KAAK2G,WAAW,SAAAxG,GAC3DwD,EAAKhB,SACH,CACEP,SAAUjC,EAASE,OAAO+B,SAC1BkF,iBAC8BV,IAA5BzG,EAASE,OAAOkI,QACZ,GACApI,EAASE,OAAOkI,QACtBf,WAAW,EACXG,kBACoCf,IAAlCzG,EAASE,OAAO4H,cACZ,GACA9H,EAASE,OAAO4H,cACtBL,sBACwChB,IAAtCzG,EAASE,OAAO+H,kBACZ,GACAjI,EAASE,OAAO+H,mBAExB,kBAAMlF,QAAQC,IAAI,kBAAmBQ,EAAKnB,MAAMmF,mDAuV7C,IAAAb,EAAAxH,KACP,OACEwE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WAAd,WAEC7E,KAAKmJ,kBAAkBnJ,KAAKiE,MAAMN,UAEnCa,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEL,UAAU,UACVQ,QAAS,kBACPmC,EAAK6C,+BAA+B7C,EAAKvD,MAAMN,YAHnD,sBASAa,EAAAC,EAAAC,cAAA,2BACC1E,KAAKwJ,mBAAmBxJ,KAAKiE,MAAMN,UAEpCa,EAAAC,EAAAC,cAAA,+BACC1E,KAAK6J,uBAAuB7J,KAAKiE,MAAMN,UAExCa,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KACE9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,KACE/F,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,YAAY,QACZE,KAAK,QACLD,SAAU,SAAA+E,GAAC,OAAIvC,EAAKsC,kBAAkBC,MAGxCvF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEL,UAAU,GACVQ,QAAS,kBAAMmC,EAAKwC,gBAAgBxC,EAAKvD,MAAMN,YAFjD,QAMAa,EAAAC,EAAAC,cAAA,WAAM1E,KAAKkD,MAAMoC,mBA9ZPC,aCoJPiF,6MA5IbtH,MAAQ,CACNuH,KAAM,GACNjK,SACuC,SAArCwG,aAAa0D,QAAQ,YACjBxD,KAAKyD,MAAM3D,aAAa0D,QAAQ,aACK,SAArC1D,aAAa0D,QAAQ,eAG7BE,YAAc,SAAAC,GACZ9K,EAAKsD,SAAS,CACZoH,KAAMI,OAIVC,eAAiB,SAAArK,GACfV,EAAKsD,SAAS,CACZ7C,SAAUC,IAEC,SAATA,EACFuG,aAAaC,QAAQ,WAAYC,KAAKC,UAAU1G,IAEhDuG,aAAaC,QAAQ,WAAYxG,MAIrCsK,WAAa,WACa,WAApBhL,EAAKmD,MAAMuH,MAAyC,mBAApB1K,EAAKmD,MAAMuH,KAC7C1K,EAAK6K,YAAY,SAEG,sBAApB7K,EAAKmD,MAAMuH,MACS,YAApB1K,EAAKmD,MAAMuH,MAEX1K,EAAK6K,YAAY,cAIrBI,WAAa,WAEX,OADApH,QAAQC,IAAI9D,EAAKmD,MAAMuH,MAED,UAApB1K,EAAKmD,MAAMuH,MACS,KAApB1K,EAAKmD,MAAMuH,MACS,YAApB1K,EAAKmD,MAAMuH,KAEJjG,EAAAC,EAAAC,cAAA,YAGLF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CACEpG,UAAU,aACVqG,KAAM,CAAC,MAAO,cACdC,KAAK,UAMbC,gBAAkB,WAChB,OAAQrL,EAAKmD,MAAMuH,MACjB,IAAK,QACH,OACEjG,EAAAC,EAAAC,cAAC2G,EAAD,CACEnH,WAAYnE,EAAK6K,YACjBnF,WAAY1F,EAAK+K,eACjBL,KAAM1K,EAAKmD,MAAMuH,OAGvB,IAAK,SACH,OAAOjG,EAAAC,EAAAC,cAAC4G,EAAD,CAAQpH,WAAYnE,EAAK6K,cAClC,IAAK,iBACH,OAAOpG,EAAAC,EAAAC,cAAC6G,EAAD,CAAgBrH,WAAYnE,EAAK6K,cAC1C,IAAK,UACH,OACEpG,EAAAC,EAAAC,cAAC8G,EAAD,CACEtH,WAAYnE,EAAK6K,YACjBnF,WAAY1F,EAAK+K,eACjBtK,SAAUT,EAAKmD,MAAM1C,WAG3B,IAAK,oBACH,OACEgE,EAAAC,EAAAC,cAACC,EAAgBC,SAAjB,KACG,SAAAjB,GAAQ,OACPa,EAAAC,EAAAC,cAAC+G,EAAD,CACEvH,WAAYnE,EAAK6K,YACjBpK,SAAUT,EAAKmD,MAAM1C,SACrBmD,SAAUA,MAMpB,IAAK,UACH,OACEa,EAAAC,EAAAC,cAACC,EAAgBC,SAAjB,KACG,SAAAjB,GAAQ,OACPa,EAAAC,EAAAC,cAACgH,EAAD,CACExH,WAAYnE,EAAK6K,YACjBpK,SAAUT,EAAKmD,MAAM1C,SACrBmD,SAAUA,MAMpB,QACE,MAC0B,SAAxB5D,EAAKmD,MAAM1C,UACa,OAAxBT,EAAKmD,MAAM1C,WACa,IAAxBT,EAAKmD,MAAM1C,SAGTgE,EAAAC,EAAAC,cAAC8G,EAAD,CACEtH,WAAYnE,EAAK6K,YACjBnF,WAAY1F,EAAK+K,eACjBtK,SAAUT,EAAKmD,MAAM1C,WAKvBgE,EAAAC,EAAAC,cAAC2G,EAAD,CACEnH,WAAYnE,EAAK6K,YACjBnF,WAAY1F,EAAK+K,eACjBL,KAAM1K,EAAKmD,MAAMuH,iFAQ3B,OACEjG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QAAQQ,QAASrF,KAAK+K,YAClC/K,KAAKgL,cAERxG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAS7E,KAAKoL,2BAvInB7F,aCCEoG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2FCFNC,IAAQC,IAAIC,KAEZC,IAASC,OACP5H,EAAAC,EAAAC,cAACC,EAAgB0H,SAAjB,CAA0B5I,MAAO,IAAI3D,GACnC0E,EAAAC,EAAAC,cAAC4H,EAAD,OAEFvG,SAASwG,eAAe,SD2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9L,KAAK,SAAA+L,GACjCA,EAAaC","file":"static/js/main.171eaf94.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport default FirebaseContext;\r\n","const config = {\n  apiKey: \"AIzaSyDni4UflIR1JzzSmNdyUfOUIWx9x0nzGM8\",\n  authDomain: \"cat-243915.firebaseapp.com\",\n  databaseURL: \"https://cat-243915.firebaseio.com\",\n  projectId: \"youtube-cat-243915\",\n  storageBucket: \"youtube-cat-243915.appspot.com\",\n  messagingSenderId: \"719371077954\",\n  appId: \"1:719371077954:web:12eebc6a33e42ddc\"\n};\n\nexport default config;\n","import FirebaseContext from \"./context\";\r\nimport Firebase from \"./firebase\";\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/firestore\";\r\nimport config from \"./config\";\r\n\r\n//\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n    this.fieldValue = app.firestore.FieldValue;\r\n    this.auth = app.auth();\r\n    this.db = app.firestore();\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n  }\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .get()\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.data();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              ...dbUser\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  //   Authentication\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  user = uid => this.db.doc(`users/${uid}`);\r\n\r\n  users = () => this.db.collection(\"users\");\r\n}\r\n\r\nexport default Firebase;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button } from \"reactstrap\";\r\nimport { FirebaseContext } from \"./firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  retypePassword: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    ...INITIAL_STATE\r\n  };\r\n\r\n  handleOnChange = event => {\r\n    this.setState(\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n    );\r\n  };\r\n\r\n  onSubmit = (firebase, event) => {\r\n    console.log(firebase);\r\n    const { email, password, username } = this.state;\r\n\r\n    firebase.firebase\r\n      .doCreateUserWithEmailAndPassword(email, password)\r\n      .then(authUser => {\r\n        return firebase.firebase.user(authUser.user.uid).set(\r\n          {\r\n            username,\r\n            email\r\n          },\r\n          { merge: true }\r\n        );\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.changePage(\"LogIn\");\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { username, email, password, retypePassword, error } = this.state;\r\n    const isInvalid =\r\n      password === \"\" || password !== retypePassword || username === \"\";\r\n\r\n    return (\r\n      <FirebaseContext.Consumer>\r\n        {firebase => (\r\n          <div className=\"container\">\r\n            <h1 className=\"toptext\">Sign Up</h1>\r\n            <Input\r\n              placeholder=\"Username\"\r\n              name=\"username\"\r\n              onChange={this.handleOnChange}\r\n              value={username}\r\n            />\r\n            <Input\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              onChange={this.handleOnChange}\r\n              value={email}\r\n            />\r\n            <Input\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleOnChange}\r\n              value={password}\r\n            />\r\n            <Input\r\n              placeholder=\"Retype Password\"\r\n              name=\"retypePassword\"\r\n              type=\"password\"\r\n              onChange={this.handleOnChange}\r\n              value={retypePassword}\r\n            />\r\n            <Button\r\n              className=\"signup\"\r\n              disabled={isInvalid}\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              onClick={event => this.onSubmit({ firebase }, event)}\r\n            >\r\n              Sign Up\r\n            </Button>{\" \"}\r\n            <br />\r\n            {error && <p>{error.message}</p>}\r\n            Already have an account?{\" \"}\r\n            <br/>\r\n            <span\r\n              className=\"linking\"\r\n              onClick={() => this.props.changePage(\"LogIn\")}\r\n            >\r\n              Sign in\r\n            </span>\r\n          </div>\r\n        )}\r\n      </FirebaseContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button } from \"reactstrap\";\r\nimport { FirebaseContext } from \"./firebase\";\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    ...INITIAL_STATE\r\n  };\r\n\r\n  handleOnChange = event => {\r\n    this.setState(\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n    );\r\n  };\r\n\r\n  onSubmit = (firebase, event) => {\r\n    console.log(firebase);\r\n    const { email, password } = this.state;\r\n    firebase.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(authUser => {\r\n        console.log(\"logged in\");\r\n        this.setState({ ...INITIAL_STATE });\r\n\r\n        firebase.firebase.auth\r\n          .onAuthStateChanged(authUser => {\r\n            console.log(\"going to welcome\");\r\n            this.props.changeAuth(authUser);\r\n            this.props.changePage(\"Welcome\");\r\n          })\r\n          .catch(error => {\r\n            console.log(\"inner errors: \", error);\r\n          });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n        console.log(\"errors: \", this.state.error);\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <FirebaseContext.Consumer>\r\n        {firebase => (\r\n          <div className=\"container\">\r\n            <h1 className=\"toptext\">Sign In</h1>\r\n            <Input\r\n              className=\"signin-input\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              onChange={this.handleOnChange}\r\n              value={email}\r\n            />\r\n            <Input\r\n              className=\"signin-input\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleOnChange}\r\n              value={password}\r\n            />\r\n            <Button\r\n              className=\"signin\"\r\n              disabled={isInvalid}\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              onClick={event => this.onSubmit({ firebase }, event)}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            {error && <p>{error.message}</p>}\r\n\r\n            \r\n            <span\r\n              className=\"linking\"\r\n              onClick={() => this.props.changePage(\"ForgotPassword\")}\r\n            >\r\n              Forgot Password?\r\n            </span>\r\n            <br />\r\n            <br />\r\n            Don't have an account?{\" \"}\r\n            <br/>\r\n            <span\r\n              className=\"linking\"\r\n              onClick={() => this.props.changePage(\"SignUp\")}\r\n            >\r\n              Sign Up\r\n            </span>\r\n            <br />\r\n            <br />\r\n          </div>\r\n        )}\r\n      </FirebaseContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","/*global chrome*/\r\nimport React, { Component } from \"react\";\r\n\r\nclass BlockCategories extends Component {\r\n  state = {\r\n    selectAllChecked: true,\r\n    blockedCategories: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const blockedCategories = await this.props.firebase\r\n      .user(this.props.authUser.uid)\r\n      .onSnapshot(snapshot => {\r\n        this.setState({ blockedCategories: snapshot.data() }, () => {\r\n          const { blockedCategories } = this.state;\r\n\r\n          if (null !== blockedCategories && undefined !== blockedCategories) {\r\n            if (undefined !== blockedCategories.blockedCategories) {\r\n              const elements = document.getElementsByClassName(\"enableKey\");\r\n              const getCategories = blockedCategories.blockedCategories;\r\n              console.log(\r\n                \"blocked cats: \",\r\n                blockedCategories.blockedCategories\r\n              );\r\n\r\n              for (let i = 0; i < getCategories.length; i++) {\r\n                console.log(\"element:\", getCategories[i]);\r\n                elements[getCategories[i]].checked = true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  handleSavePreferences = firebase => {\r\n    const elements = document.getElementsByClassName(\"enableKey\");\r\n    let checkedItems = [];\r\n    const catArray = [];\r\n    for (let i = 0; i < elements.length; i++) {\r\n      if (elements[i].checked) {\r\n        checkedItems.push(elements[i].value);\r\n        catArray.push(elements[i].name);\r\n      }\r\n    }\r\n\r\n    chrome.tabs.query(\r\n      {\r\n        active: true,\r\n        currentWindow: true\r\n      },\r\n      function(tabs) {\r\n        chrome.tabs.sendMessage(tabs[0].id, {\r\n          todo: \"changePreferences\",\r\n          categories: catArray\r\n        });\r\n        console.log(\"sending message about cats\");\r\n      }\r\n    );\r\n\r\n    localStorage.setItem(\"blockedCategories\", JSON.stringify(checkedItems));\r\n    firebase.user(this.props.authUser.uid).set(\r\n      {\r\n        blockedCategories: checkedItems\r\n      },\r\n      { merge: true }\r\n    );\r\n    console.log(checkedItems);\r\n  };\r\n\r\n  handleSelectAll = () => {\r\n    this.setState({\r\n      selectAllChecked: !this.state.selectAllChecked\r\n    });\r\n\r\n    if (this.state.selectAllChecked) {\r\n      const elements = document.getElementsByClassName(\"enableKey\");\r\n      for (let i = 0; i < elements.length; i++) {\r\n        elements[i].checked = true;\r\n      }\r\n    } else {\r\n      const elements = document.getElementsByClassName(\"enableKey\");\r\n      for (let i = 0; i < elements.length; i++) {\r\n        elements[i].checked = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // <FirebaseContext.Consumer>\r\n      //   {firebase => {\r\n      //     this.getBlockedCategories(firebase);\r\n      // return (\r\n      <div className=\"container\">\r\n        <h3 className=\"toptext\">Blocked categories:</h3>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"checkbox-group\">\r\n            <ul className=\"blockedcategories\">\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"-1\"\r\n                  id=\"selectAll\"\r\n                  onClick={this.handleSelectAll}\r\n                />\r\n                Select all\r\n              </li>\r\n              <br />\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"0\"\r\n                  name=\"Auto & Vehicles\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Auto & Vehicles\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"1\"\r\n                  name=\"Beauty & Fashion\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Beauty & Fashion\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"2\"\r\n                  name=\"Comedy\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Comedy\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"3\"\r\n                  name=\"Education\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Education\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"4\"\r\n                  name=\"Entertainment\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Entertainment\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"5\"\r\n                  name=\"Family Entertainment\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Family Entertainment\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"6\"\r\n                  name=\"Film & Animation\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Film & Animation\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"7\"\r\n                  name=\"Food\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Food\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"8\"\r\n                  name=\"Gaming\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Gaming\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"9\"\r\n                  name=\"Howto & Style\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Howto & Style\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"10\"\r\n                  name=\"Music\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Music\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"11\"\r\n                  name=\"News & Politics\"\r\n                  class=\"enableKey\"\r\n                />\r\n                News & Politics\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"12\"\r\n                  name=\"Nonprofits & Activism\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Nonprofits & Activism\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"13\"\r\n                  name=\"People & Blogs\"\r\n                  class=\"enableKey\"\r\n                />\r\n                People & Blogs\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"14\"\r\n                  name=\"Pets & Animals\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Pets & Animals\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"15\"\r\n                  name=\"Science & Technology\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Science & Technology\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"16\"\r\n                  name=\"Sports\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Sports\r\n              </li>\r\n              <li>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value=\"17\"\r\n                  name=\"Travel & Events\"\r\n                  class=\"enableKey\"\r\n                />\r\n                Travel & Events\r\n              </li>\r\n            </ul>\r\n            <div class=\"buttonwrapper\">\r\n              <button\r\n                id=\"savePreferences\"\r\n                class=\"savePreferences\"\r\n                onClick={() => this.handleSavePreferences(this.props.firebase)}\r\n              >\r\n                Begin block!\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    //   }}\r\n    // </FirebaseContext.Consumer>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default BlockCategories;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button } from \"reactstrap\";\r\nimport { FirebaseContext } from \"./firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n    resetEmailSent: false\r\n  };\r\n\r\n  handleOnChange = event => {\r\n    this.setState(\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n    );\r\n  };\r\n\r\n  onSubmit = (firebase, event) => {\r\n    console.log(firebase);\r\n    const { email } = this.state;\r\n    firebase.firebase\r\n      .doPasswordReset(email)\r\n      .then(authUser => {\r\n        console.log(\"reset email sent\");\r\n        this.setState({ ...INITIAL_STATE, resetEmailSent: true });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { email, resetEmailSent, error } = this.state;\r\n    const isInvalid =\r\n      //   email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) ||\r\n      email === \"\";\r\n\r\n    return (\r\n      <FirebaseContext.Consumer>\r\n        {firebase => (\r\n          <div className=\"container\">\r\n            <h1 className=\"toptext\">Reset Password</h1>\r\n\r\n            <Input\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              onChange={this.handleOnChange}\r\n              value={email}\r\n            />\r\n\r\n            <Button\r\n              className=\"resetpass\"\r\n              disabled={isInvalid}\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              onClick={event => this.onSubmit({ firebase }, event)}\r\n            >\r\n              Send email to reset\r\n            </Button>\r\n            {error && <p>{error.message}</p>}\r\n            {resetEmailSent && (\r\n              <div>\r\n                <p>{\"An email has been sent to reset your password\"}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </FirebaseContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { FirebaseContext } from \"./firebase\";\r\n\r\nclass Welcome extends Component {\r\n  state = {};\r\n\r\n  handleSignOut = firebase => {\r\n    firebase.doSignOut().then(signout => {\r\n      console.log(\"signout\");\r\n      firebase.auth.onAuthStateChanged(authUser => {\r\n        this.props.changeAuth(\"null\");\r\n        this.props.changePage(\"LogIn\");\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"local storage: \", this.props.authUser);\r\n    return (\r\n      <FirebaseContext.Consumer>\r\n        {firebase => (\r\n          <div>\r\n            <p className=\"toptext\">\r\n              Meow! Click the button below and block to your heart's content!\r\n            </p>\r\n            <br />\r\n            <Button\r\n              className=\"block\"\r\n              color=\"primary\"\r\n              onClick={() => this.props.changePage(\"BlockedCategories\")}\r\n            >\r\n              Block Categories\r\n            </Button>\r\n\r\n            <Button\r\n              className=\"Friends\"\r\n              color=\"primary\"\r\n              onClick={() => this.props.changePage(\"Friends\")}\r\n            >\r\n              Friends\r\n            </Button>\r\n\r\n            <br />\r\n            <Button\r\n              className=\"signout\"\r\n              onClick={() => this.handleSignOut(firebase)}\r\n            >\r\n              Sign Out\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </FirebaseContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button, Form, FormGroup } from \"reactstrap\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nclass Friends extends Component {\r\n  state = {\r\n    username: \"\",\r\n    friendsList: [],\r\n    friendEmail: \"\",\r\n    message: \"\",\r\n    isLoading: true,\r\n    friendId: \"\",\r\n    friendPendingRequests: [],\r\n    requestsSent: [],\r\n    requestsReceived: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.authUser);\r\n    this.props.changePage(\"Friends\");\r\n    this.props.firebase.user(this.props.authUser.uid).onSnapshot(snapshot => {\r\n      this.setState(\r\n        {\r\n          username: snapshot.data().username,\r\n          friendsList:\r\n            snapshot.data().friends === undefined\r\n              ? []\r\n              : snapshot.data().friends,\r\n          isLoading: false,\r\n          requestsSent:\r\n            snapshot.data().requests_sent === undefined\r\n              ? []\r\n              : snapshot.data().requests_sent,\r\n          requestsReceived:\r\n            snapshot.data().requests_received === undefined\r\n              ? []\r\n              : snapshot.data().requests_received\r\n        },\r\n        () => console.log(\"requests sent: \", this.state.requestsSent)\r\n      );\r\n    });\r\n  }\r\n\r\n  cancelSentRequest = (request, firebase) => {\r\n    this.setState(\r\n      {\r\n        requestsSent: this.state.requestsSent.filter(\r\n          friend => friend.id !== request.id\r\n        )\r\n      },\r\n      () => {\r\n        firebase.user(this.props.authUser.uid).set(\r\n          {\r\n            requests_sent: this.state.requestsSent\r\n          },\r\n          {\r\n            merge: true\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n    //remove request sent from potential friend's account\r\n    firebase\r\n      .user(request.id)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        let fetchRequestsreceivedData = querySnapshot.data().requests_received;\r\n\r\n        if (fetchRequestsreceivedData !== undefined) {\r\n          firebase.user(request.id).set(\r\n            {\r\n              requests_received: fetchRequestsreceivedData.filter(\r\n                friend => friend.id !== this.props.authUser.uid\r\n              )\r\n            },\r\n            { merge: true }\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  handleRemoveFriend = (foe, firebase) => {\r\n    this.setState(\r\n      {\r\n        friendsList: this.state.friendsList.filter(\r\n          friend => friend.id !== foe.id\r\n        )\r\n      },\r\n      () => {\r\n        firebase.user(this.props.authUser.uid).set(\r\n          {\r\n            friends: this.state.friendsList\r\n          },\r\n          {\r\n            merge: true\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n    firebase\r\n      .user(foe.id)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        let foeFriendsList = querySnapshot.data().friends;\r\n\r\n        if (foeFriendsList !== undefined) {\r\n          firebase.user(foe.id).set(\r\n            {\r\n              friends: foeFriendsList.filter(\r\n                friend => friend.id !== this.props.authUser.uid\r\n              )\r\n            },\r\n            {\r\n              merge: true\r\n            }\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  renderFriendsList = firebase => {\r\n    return this.state.isLoading ? (\r\n      <Spinner animation=\"border\" role=\"status\" />\r\n    ) : this.state.friendsList !== undefined ? (\r\n      this.state.friendsList.map(friend => (\r\n        <div>\r\n          <h6>{friend.username}</h6>\r\n          <Button color=\"success\">Help my friend!</Button>\r\n          <Button\r\n            color=\"danger\"\r\n            onClick={() => this.handleRemoveFriend(friend, firebase)}\r\n          >\r\n            Remove friend\r\n          </Button>\r\n        </div>\r\n      ))\r\n    ) : (\r\n      <div />\r\n    );\r\n  };\r\n\r\n  renderRequestsSent = firebase => {\r\n    return this.state.requestsSent.map(friend => (\r\n      <div>\r\n        <h6>{friend.username}</h6>\r\n        <Button\r\n          color=\"danger\"\r\n          onClick={() => this.cancelSentRequest(friend, firebase)}\r\n        >\r\n          Cancel Request\r\n        </Button>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  acceptReceivedRequest = (friend, firebase) => {\r\n    // add this new friend to the existing list of friends locally and on firestore\r\n    this.setState(\r\n      {\r\n        friendsList: [...this.state.friendsList, friend]\r\n      },\r\n      () => {\r\n        console.log(\"friends list: \", this.state.friendsList);\r\n        firebase.user(this.props.authUser.uid).set(\r\n          {\r\n            friends: this.state.friendsList\r\n          },\r\n          {\r\n            merge: true\r\n          }\r\n        );\r\n\r\n        //remove this friend from the friends request section locally and on firestore\r\n        this.setState(\r\n          {\r\n            requestsReceived: this.state.requestsReceived.filter(\r\n              request => request.id !== friend.id\r\n            )\r\n          },\r\n          () => {\r\n            firebase.user(this.props.authUser.uid).set(\r\n              {\r\n                requests_received: this.state.requestsReceived\r\n              },\r\n              {\r\n                merge: true\r\n              }\r\n            );\r\n\r\n            //add yourself as a friend in this new friend's firestore\r\n            firebase\r\n              .user(friend.id)\r\n              .get()\r\n              .then(querySnapshot => {\r\n                let fetchRequestsSentData = querySnapshot.data().requests_sent;\r\n                console.log(\"friends: \", firebase.user(friend.id));\r\n\r\n                if (fetchRequestsSentData !== undefined) {\r\n                  firebase.user(friend.id).set(\r\n                    {\r\n                      requests_sent: fetchRequestsSentData.filter(\r\n                        request => request.id !== this.props.authUser.uid\r\n                      ),\r\n                      friends: [\r\n                        querySnapshot.data().friends !== undefined\r\n                          ? { ...querySnapshot.data().friends }\r\n                          : { ...[] },\r\n\r\n                        {\r\n                          email: this.props.authUser.email,\r\n                          username: this.state.username,\r\n                          id: this.props.authUser.uid\r\n                        }\r\n                      ]\r\n                    },\r\n                    { merge: true }\r\n                  );\r\n                }\r\n              });\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  rejectReceivedRequest = (request, firebase) => {\r\n    // remove request received locally and on firestore\r\n    this.setState(\r\n      {\r\n        requestsReceived: this.state.requestsReceived.filter(\r\n          friend => friend.id !== request.id\r\n        )\r\n      },\r\n      () => {\r\n        firebase.user(this.props.authUser.uid).set(\r\n          {\r\n            requests_received: this.state.requestsReceived\r\n          },\r\n          {\r\n            merge: true\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n    //remove request sent from potential friend's account\r\n    firebase\r\n      .user(request.id)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        let fetchRequestsSentData = querySnapshot.data().requests_sent;\r\n\r\n        if (fetchRequestsSentData !== undefined) {\r\n          firebase.user(request.id).set(\r\n            {\r\n              requests_sent: fetchRequestsSentData.filter(\r\n                friend => friend.id !== this.props.authUser.uid\r\n              )\r\n            },\r\n            { merge: true }\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  renderRequestsReceived = firebase => {\r\n    return this.state.requestsReceived.map(friend => (\r\n      <div>\r\n        <h6>{friend.username}</h6>\r\n        <Button\r\n          color=\"success\"\r\n          onClick={() => this.acceptReceivedRequest(friend, firebase)}\r\n        >\r\n          Accept\r\n        </Button>\r\n        <Button\r\n          color=\"danger\"\r\n          onClick={() => this.rejectReceivedRequest(friend, firebase)}\r\n        >\r\n          Reject\r\n        </Button>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  handleFriendEmail = e => {\r\n    this.setState({\r\n      friendEmail: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddFriend = firebase => {\r\n    firebase.db\r\n      .collection(\"users\")\r\n      .where(\"email\", \"==\", this.state.friendEmail)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        if (querySnapshot.docs.length < 1) {\r\n          this.setState({\r\n            message:\r\n              \"Meow Meow. This user does not exist. Please check the email and try again\"\r\n          });\r\n        } else {\r\n          querySnapshot.forEach(doc => {\r\n            if (\r\n              this.state.requestsSent.filter(friend => friend.uid === doc.id)\r\n                .length === 0\r\n            ) {\r\n              this.setState(\r\n                {\r\n                  requestsSent: [\r\n                    ...this.state.requestsSent,\r\n                    {\r\n                      email: this.state.friendEmail,\r\n                      username: doc.data().username,\r\n                      id: doc.id\r\n                    }\r\n                  ],\r\n                  friendId: doc.id\r\n                },\r\n                () => {\r\n                  console.log(\"friend id: \", this.state.friendId);\r\n                  firebase.user(this.props.authUser.uid).set(\r\n                    {\r\n                      requests_sent: this.state.requestsSent\r\n                    },\r\n                    { merge: true }\r\n                  );\r\n\r\n                  this.setState(\r\n                    {\r\n                      message: \"Request sent\"\r\n                    },\r\n                    () => {\r\n                      firebase\r\n                        .user(this.state.friendId)\r\n                        .get()\r\n                        .then(querySnapshot => {\r\n                          this.setState(\r\n                            {\r\n                              friendsPendingRequests:\r\n                                querySnapshot.data().requests_received ===\r\n                                undefined\r\n                                  ? []\r\n                                  : querySnapshot.data().requests_received\r\n                            },\r\n                            () => {\r\n                              firebase.user(this.state.friendId).set(\r\n                                {\r\n                                  requests_received: [\r\n                                    ...this.state.friendPendingRequests,\r\n                                    {\r\n                                      id: this.props.authUser.uid,\r\n                                      email: this.props.authUser.email,\r\n                                      username: this.state.username\r\n                                    }\r\n                                  ]\r\n                                },\r\n                                { merge: true }\r\n                              );\r\n                            }\r\n                          );\r\n                        });\r\n                    }\r\n                  );\r\n                }\r\n              );\r\n            } else {\r\n              this.setState({\r\n                message: \"Request is already sent. Please be patient and purr\"\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleUpdateFriendsPreferences = firebase => {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3 className=\"toptext\">Friends</h3>\r\n\r\n        {this.renderFriendsList(this.props.firebase)}\r\n\r\n        <Button\r\n          className=\"signout\"\r\n          onClick={() =>\r\n            this.handleUpdateFriendsPreferences(this.props.firebase)\r\n          }\r\n        >\r\n          Update Preferences\r\n        </Button>\r\n\r\n        <h4>Requests Sent</h4>\r\n        {this.renderRequestsSent(this.props.firebase)}\r\n\r\n        <h4>Requests Received</h4>\r\n        {this.renderRequestsReceived(this.props.firebase)}\r\n\r\n        <h4>Add a friend!</h4>\r\n        <Form>\r\n          <FormGroup>\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"email\"\r\n              onChange={e => this.handleFriendEmail(e)}\r\n            />\r\n\r\n            <Button\r\n              className=\"\"\r\n              onClick={() => this.handleAddFriend(this.props.firebase)}\r\n            >\r\n              Add!\r\n            </Button>\r\n            <div>{this.state.message}</div>\r\n          </FormGroup>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Friends;\r\n","/*global chrome*/\r\nimport React, { Component } from \"react\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport LogIn from \"./components/LogIn\";\r\nimport BlockedCategories from \"./components/BlockCategories\";\r\nimport ForgotPassword from \"./components/ForgotPassword\";\r\nimport Welcome from \"./components/Welcome\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { FirebaseContext } from \"./components/firebase\";\r\nimport Friends from \"./components/Friends\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    page: \"\",\r\n    authUser:\r\n      localStorage.getItem(\"authUser\") !== \"null\"\r\n        ? JSON.parse(localStorage.getItem(\"authUser\"))\r\n        : localStorage.getItem(\"authUser\") !== \"null\"\r\n  };\r\n\r\n  handlePages = pageTitle => {\r\n    this.setState({\r\n      page: pageTitle\r\n    });\r\n  };\r\n\r\n  handleAuthUser = user => {\r\n    this.setState({\r\n      authUser: user\r\n    });\r\n    if (user !== \"null\") {\r\n      localStorage.setItem(\"authUser\", JSON.stringify(user));\r\n    } else {\r\n      localStorage.setItem(\"authUser\", user);\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    if (this.state.page === \"SignUp\" || this.state.page === \"ForgotPassword\") {\r\n      this.handlePages(\"LogIn\");\r\n    } else if (\r\n      this.state.page === \"BlockedCategories\" ||\r\n      this.state.page === \"Friends\"\r\n    ) {\r\n      this.handlePages(\"Welcome\");\r\n    }\r\n  };\r\n\r\n  renderBack = () => {\r\n    console.log(this.state.page);\r\n    if (\r\n      this.state.page === \"LogIn\" ||\r\n      this.state.page === \"\" ||\r\n      this.state.page === \"Welcome\"\r\n    ) {\r\n      return <div />;\r\n    } else {\r\n      return (\r\n        <FontAwesomeIcon\r\n          className=\"backButton\"\r\n          icon={[\"fas\", \"arrow-left\"]}\r\n          size=\"lg\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  renderComponent = () => {\r\n    switch (this.state.page) {\r\n      case \"LogIn\":\r\n        return (\r\n          <LogIn\r\n            changePage={this.handlePages}\r\n            changeAuth={this.handleAuthUser}\r\n            page={this.state.page}\r\n          />\r\n        );\r\n      case \"SignUp\":\r\n        return <SignUp changePage={this.handlePages} />;\r\n      case \"ForgotPassword\":\r\n        return <ForgotPassword changePage={this.handlePages} />;\r\n      case \"Welcome\":\r\n        return (\r\n          <Welcome\r\n            changePage={this.handlePages}\r\n            changeAuth={this.handleAuthUser}\r\n            authUser={this.state.authUser}\r\n          />\r\n        );\r\n      case \"BlockedCategories\":\r\n        return (\r\n          <FirebaseContext.Consumer>\r\n            {firebase => (\r\n              <BlockedCategories\r\n                changePage={this.handlePages}\r\n                authUser={this.state.authUser}\r\n                firebase={firebase}\r\n              />\r\n            )}\r\n          </FirebaseContext.Consumer>\r\n        );\r\n\r\n      case \"Friends\":\r\n        return (\r\n          <FirebaseContext.Consumer>\r\n            {firebase => (\r\n              <Friends\r\n                changePage={this.handlePages}\r\n                authUser={this.state.authUser}\r\n                firebase={firebase}\r\n              />\r\n            )}\r\n          </FirebaseContext.Consumer>\r\n        );\r\n\r\n      default:\r\n        if (\r\n          this.state.authUser !== \"null\" &&\r\n          this.state.authUser !== null &&\r\n          this.state.authUser !== false\r\n        ) {\r\n          return (\r\n            <Welcome\r\n              changePage={this.handlePages}\r\n              changeAuth={this.handleAuthUser}\r\n              authUser={this.state.authUser}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <LogIn\r\n              changePage={this.handlePages}\r\n              changeAuth={this.handleAuthUser}\r\n              page={this.state.page}\r\n            />\r\n          );\r\n        }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container flexing\">\r\n        <div className=\"flex1\" onClick={this.handleBack}>\r\n          {this.renderBack()}\r\n        </div>\r\n        <div className=\"flex2\">{this.renderComponent()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Firebase, { FirebaseContext } from \"./components/firebase\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// import {} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\n// import {} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nlibrary.add(faArrowLeft);\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}