{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\dalis\\\\Documents\\\\GitHub\\\\youtube-cat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\dalis\\\\Documents\\\\GitHub\\\\youtube-cat\\\\src\\\\components\\\\ForgotPassword.jsx\";\nimport React, { Component } from \"react\";\nimport { Input, Button } from \"reactstrap\";\nimport { FirebaseContext } from \"./firebase\";\nconst INITIAL_STATE = {\n  email: \"\",\n  error: null\n};\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, INITIAL_STATE, {\n      resetEmailSent: false\n    });\n\n    this.handleOnChange = event => {\n      this.setState(this.setState({\n        [event.target.name]: event.target.value\n      }));\n    };\n\n    this.onSubmit = (firebase, event) => {\n      console.log(firebase);\n      const email = this.state.email;\n      firebase.firebase.doPasswordReset(email).then(authUser => {\n        console.log(\"reset email sent\");\n        this.setState(_objectSpread({}, INITIAL_STATE, {\n          resetEmailSent: true\n        }));\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          resetEmailSent = _this$state.resetEmailSent,\n          error = _this$state.error;\n    const isInvalid = //   email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) ||\n    email === \"\";\n    return React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, firebase => React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"toptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Reset Password\"), React.createElement(Input, {\n      placeholder: \"Email\",\n      name: \"email\",\n      onChange: this.handleOnChange,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"resetpass\",\n      disabled: isInvalid,\n      color: \"primary\",\n      type: \"submit\",\n      onClick: event => this.onSubmit({\n        firebase\n      }, event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Send email to reset\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, error.message), resetEmailSent && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"An email has been sent to reset your password\"))));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["C:\\Users\\dalis\\Documents\\GitHub\\youtube-cat\\src\\components\\ForgotPassword.jsx"],"names":["React","Component","Input","Button","FirebaseContext","INITIAL_STATE","email","error","ForgotPassword","state","resetEmailSent","handleOnChange","event","setState","target","name","value","onSubmit","firebase","console","log","doPasswordReset","then","authUser","catch","preventDefault","render","isInvalid","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B;AACA,SAASC,eAAT,QAAgC,YAAhC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAAtB;;AAKA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCQ,KADqC,qBAEhCJ,aAFgC;AAGnCK,MAAAA,cAAc,EAAE;AAHmB;;AAAA,SAMrCC,cANqC,GAMpBC,KAAK,IAAI;AACxB,WAAKC,QAAL,CACE,KAAKA,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd,CADF;AAKD,KAZoC;;AAAA,SAcrCC,QAdqC,GAc1B,CAACC,QAAD,EAAWN,KAAX,KAAqB;AAC9BO,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAD8B,YAEtBZ,KAFsB,GAEZ,KAAKG,KAFO,CAEtBH,KAFsB;AAG9BY,MAAAA,QAAQ,CAACA,QAAT,CACGG,eADH,CACmBf,KADnB,EAEGgB,IAFH,CAEQC,QAAQ,IAAI;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAAKP,QAAL,mBAAmBR,aAAnB;AAAkCK,UAAAA,cAAc,EAAE;AAAlD;AACD,OALH,EAMGc,KANH,CAMSjB,KAAK,IAAI;AACd,aAAKM,QAAL,CAAc;AAAEN,UAAAA;AAAF,SAAd;AACD,OARH;AAUAK,MAAAA,KAAK,CAACa,cAAN;AACD,KA5BoC;AAAA;;AA8BrCC,EAAAA,MAAM,GAAG;AAAA,wBACkC,KAAKjB,KADvC;AAAA,UACCH,KADD,eACCA,KADD;AAAA,UACQI,cADR,eACQA,cADR;AAAA,UACwBH,KADxB,eACwBA,KADxB;AAEP,UAAMoB,SAAS,GACb;AACArB,IAAAA,KAAK,KAAK,EAFZ;AAIA,WACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,QAAQ,IACP;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAGE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,OADd;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAE,KAAKP,cAHjB;AAIE,MAAA,KAAK,EAAEL,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAUE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,QAAQ,EAAEqB,SAFZ;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,OAAO,EAAEf,KAAK,IAAI,KAAKK,QAAL,CAAc;AAAEC,QAAAA;AAAF,OAAd,EAA4BN,KAA5B,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAVF,EAmBGL,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACqB,OAAV,CAnBZ,EAoBGlB,cAAc,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,+CAAJ,CADF,CArBJ,CAFJ,CADF;AAgCD;;AApEoC;;AAuEvC,eAAeF,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Input, Button } from \"reactstrap\";\r\nimport { FirebaseContext } from \"./firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n    resetEmailSent: false\r\n  };\r\n\r\n  handleOnChange = event => {\r\n    this.setState(\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n    );\r\n  };\r\n\r\n  onSubmit = (firebase, event) => {\r\n    console.log(firebase);\r\n    const { email } = this.state;\r\n    firebase.firebase\r\n      .doPasswordReset(email)\r\n      .then(authUser => {\r\n        console.log(\"reset email sent\");\r\n        this.setState({ ...INITIAL_STATE, resetEmailSent: true });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { email, resetEmailSent, error } = this.state;\r\n    const isInvalid =\r\n      //   email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) ||\r\n      email === \"\";\r\n\r\n    return (\r\n      <FirebaseContext.Consumer>\r\n        {firebase => (\r\n          <div className=\"container\">\r\n            <h1 className=\"toptext\">Reset Password</h1>\r\n\r\n            <Input\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              onChange={this.handleOnChange}\r\n              value={email}\r\n            />\r\n\r\n            <Button\r\n              className=\"resetpass\"\r\n              disabled={isInvalid}\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              onClick={event => this.onSubmit({ firebase }, event)}\r\n            >\r\n              Send email to reset\r\n            </Button>\r\n            {error && <p>{error.message}</p>}\r\n            {resetEmailSent && (\r\n              <div>\r\n                <p>{\"An email has been sent to reset your password\"}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </FirebaseContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}